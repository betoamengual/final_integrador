// src/index.ts
import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import path from 'path';

import questionsRouter from './routes/questions';
import rankingRouter from './routes/ranking';   // â‘  importamos el router de ranking

dotenv.config();
const app = express();

// â”€â”€â”€â”€â”€â”€â”€â”€ MIDDLEWARES â”€â”€â”€â”€â”€â”€â”€â”€
// 1) Permitir peticiones desde el front (CORS)
// 2) Parsear bodies en JSON
app.use(cors());
app.use(express.json());

// â”€â”€â”€â”€â”€â”€â”€â”€ RUTAS API â”€â”€â”€â”€â”€â”€â”€â”€
// 3) Preguntas: /api/question/...
app.use('/api/question', questionsRouter);

// 4) Ranking: 
//    - POST /api/scores    guarda un resultado  
//    - GET  /api/ranking   devuelve el top-20  
app.use('/api', rankingRouter);

// â”€â”€â”€â”€â”€â”€â”€â”€ SERVIR FRONT-END â”€â”€â”€â”€â”€â”€â”€â”€
// 5) Servimos los archivos estÃ¡ticos de public/ (index.html, JS, CSSâ€¦)
const publicPath = path.join(__dirname, '../../public');
app.use(express.static(publicPath));

// â”€â”€â”€â”€â”€â”€â”€â”€ LEVANTAR SERVIDOR â”€â”€â”€â”€â”€â”€â”€â”€
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`ðŸš€ Server corriendo en http://localhost:${PORT}`);
});
